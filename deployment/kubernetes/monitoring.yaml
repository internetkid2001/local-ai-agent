apiVersion: v1
kind: ServiceMonitor
metadata:
  name: ai-agent-metrics
  namespace: local-ai-agent
  labels:
    app: ai-agent-api
    release: prometheus
spec:
  selector:
    matchLabels:
      app: ai-agent-api
  endpoints:
  - port: http
    path: /metrics
    interval: 30s
    scrapeTimeout: 10s

---
apiVersion: v1
kind: Service
metadata:
  name: ai-agent-metrics-service
  namespace: local-ai-agent
  labels:
    app: ai-agent-api
    metrics: "true"
spec:
  selector:
    app: ai-agent-api
  ports:
  - port: 8000
    targetPort: 8000
    name: http
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: local-ai-agent
  labels:
    app: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      serviceAccountName: prometheus
      containers:
      - name: prometheus
        image: prom/prometheus:latest
        ports:
        - containerPort: 9090
        args:
        - '--config.file=/etc/prometheus/prometheus.yml'
        - '--storage.tsdb.path=/prometheus/'
        - '--web.console.libraries=/etc/prometheus/console_libraries'
        - '--web.console.templates=/etc/prometheus/consoles'
        - '--web.enable-lifecycle'
        - '--storage.tsdb.retention.time=30d'
        volumeMounts:
        - name: prometheus-config
          mountPath: /etc/prometheus/
        - name: prometheus-storage
          mountPath: /prometheus/
        resources:
          requests:
            memory: "512Mi"
            cpu: "200m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
      volumes:
      - name: prometheus-config
        configMap:
          name: prometheus-config
      - name: prometheus-storage
        persistentVolumeClaim:
          claimName: prometheus-pvc

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: local-ai-agent
data:
  prometheus.yml: |
    global:
      scrape_interval: 30s
      evaluation_interval: 30s
    
    rule_files:
      - "alerting_rules.yml"
    
    alerting:
      alertmanagers:
        - static_configs:
            - targets:
              - alertmanager:9093
    
    scrape_configs:
      - job_name: 'ai-agent-api'
        static_configs:
          - targets: ['ai-agent-api-service:80']
        metrics_path: /metrics
        scrape_interval: 30s
      
      - job_name: 'redis'
        static_configs:
          - targets: ['redis-service:6379']
      
      - job_name: 'postgres'
        static_configs:
          - targets: ['postgres-service:5432']
      
      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names:
                - local-ai-agent
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
  namespace: local-ai-agent

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prometheus-pvc
  namespace: local-ai-agent
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi