apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-agent-api
  namespace: local-ai-agent
  labels:
    app: ai-agent-api
    component: api-gateway
spec:
  replicas: 3
  selector:
    matchLabels:
      app: ai-agent-api
  template:
    metadata:
      labels:
        app: ai-agent-api
        component: api-gateway
    spec:
      serviceAccountName: ai-agent-service-account
      containers:
      - name: api-gateway
        image: local-ai-agent:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        env:
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: ai-agent-config
              key: ENVIRONMENT
        - name: API_HOST
          valueFrom:
            configMapKeyRef:
              name: ai-agent-config
              key: API_HOST
        - name: API_PORT
          valueFrom:
            configMapKeyRef:
              name: ai-agent-config
              key: API_PORT
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: ai-agent-config
              key: REDIS_HOST
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: ai-agent-config
              key: REDIS_PORT
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: ai-agent-secrets
              key: REDIS_PASSWORD
        - name: DATABASE_HOST
          valueFrom:
            configMapKeyRef:
              name: ai-agent-config
              key: DATABASE_HOST
        - name: DATABASE_PORT
          valueFrom:
            configMapKeyRef:
              name: ai-agent-config
              key: DATABASE_PORT
        - name: DATABASE_NAME
          valueFrom:
            configMapKeyRef:
              name: ai-agent-config
              key: DATABASE_NAME
        - name: DATABASE_USER
          valueFrom:
            secretKeyRef:
              name: ai-agent-secrets
              key: DATABASE_USER
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: ai-agent-secrets
              key: DATABASE_PASSWORD
        - name: JWT_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: ai-agent-secrets
              key: JWT_SECRET_KEY
        - name: JWT_ALGORITHM
          valueFrom:
            configMapKeyRef:
              name: ai-agent-config
              key: JWT_ALGORITHM
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 2
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: cache
          mountPath: /home/appuser/.cache
      volumes:
      - name: tmp
        emptyDir: {}
      - name: cache
        emptyDir: {}
      imagePullSecrets:
      - name: registry-secret

---
apiVersion: v1
kind: Service
metadata:
  name: ai-agent-api-service
  namespace: local-ai-agent
  labels:
    app: ai-agent-api
spec:
  selector:
    app: ai-agent-api
  ports:
  - port: 80
    targetPort: 8000
    name: http
    protocol: TCP
  type: ClusterIP

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ai-agent-service-account
  namespace: local-ai-agent
  labels:
    app: ai-agent-api